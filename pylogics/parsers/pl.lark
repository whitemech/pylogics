start: propositional_formula

?propositional_formula: prop_equivalence
?prop_equivalence: prop_implication (EQUIVALENCE prop_implication)*
?prop_implication: prop_or (IMPLY prop_or)*
?prop_or: prop_and (OR prop_and)*
?prop_and: prop_not (AND prop_not)*
?prop_not: NOT* prop_wrapped
?prop_wrapped: prop_atom
            | LEFT_PARENTHESIS propositional_formula RIGHT_PARENTHESIS
?prop_atom: atom
         | prop_true
         | prop_false

atom: SYMBOL_NAME
prop_true: TRUE
prop_false: FALSE

LEFT_PARENTHESIS : "("
RIGHT_PARENTHESIS : ")"
EQUIVALENCE : "<->"
IMPLY : ">>"|"->"
OR: "||"|"|"
AND: "&&"|"&"
NOT: "!"|"~"
TRUE.2: /true/
FALSE.2: /false/

// Symbols cannot start with uppercase letters, because these are reserved. Moreover, any word between quotes is a symbol.
// More in detail:
// 1) either start with [a-z_], followed by at least one [a-zA-Z0-9_-], and by one [a-zA-Z0-9_] (i.e. hyphens only in between)
// 2) or, start with [a-z_] and follows with any sequence of [a-zA-Z0-9_] (no hyphens)
// 3) or, any sequence of ASCII printable characters (i.e. going from ' ' to '~'), except '"'.
SYMBOL_NAME: FIRST_SYMBOL_CHAR _SYMBOL_1_BODY _SYMBOL_1_TAIL
           | FIRST_SYMBOL_CHAR _SYMBOL_2_BODY
           | DOUBLE_QUOTES _SYMBOL_3_BODY DOUBLE_QUOTES

_SYMBOL_QUOTED: DOUBLE_QUOTES _SYMBOL_3_BODY DOUBLE_QUOTES
_SYMBOL_1_BODY: /[a-zA-Z0-9_\-]+/
_SYMBOL_1_TAIL: /[a-zA-Z0-9_]/
_SYMBOL_2_BODY: /[a-zA-Z0-9_]*/
_SYMBOL_3_BODY: /[ -!#-~]+?/

DOUBLE_QUOTES: "\""
FIRST_SYMBOL_CHAR: /[a-z_]/


%ignore /\s+/
